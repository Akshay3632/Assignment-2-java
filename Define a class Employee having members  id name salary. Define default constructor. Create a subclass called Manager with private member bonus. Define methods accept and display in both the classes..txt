public class Employee {
    protected int id;
    protected String name;
    protected double salary;

    public Employee() {
        // Default constructor
    }

    public Employee(int id, String name, double salary) {
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    public void accept() {
        // Accept method to be overridden in subclasses
    }

    public void display() {
        System.out.println("ID: " + id);
        System.out.println("Name: " + name);
        System.out.println("Salary: " + salary);
    }
}


//Manager.java:


public class Manager extends Employee {
    private double bonus;

    public Manager() {
        super();
    }

    public Manager(int id, String name, double salary, double bonus) {
        super(id, name, salary);
        this.bonus = bonus;
    }

    @Override
    public void accept() {
        super.accept();
        // You can add code here to accept bonus
    }

    @Override
    public void display() {
        super.display();
        System.out.println("Bonus: " + bonus);
    }

    public double getTotalSalary() {
        return salary + bonus;
    }
}


//EmployeeMain.java:


import java.util.Scanner;

public class EmployeeMain {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of managers (n): ");
        int n = scanner.nextInt();

        Manager[] managers = new Manager[n];

        for (int i = 0; i < n; i++) {
            System.out.println("\nEnter details for Manager " + (i + 1) + ":");
            managers[i] = new Manager();
            System.out.print("Enter ID: ");
            managers[i].id = scanner.nextInt();
            scanner.nextLine(); // consume the newline
            System.out.print("Enter Name: ");
            managers[i].name = scanner.nextLine();
            System.out.print("Enter Salary: ");
            managers[i].salary = scanner.nextDouble();
            System.out.print("Enter Bonus: ");
            managers[i].bonus = scanner.nextDouble();
        }

        double maxTotalSalary = 0;
        Manager maxTotalSalaryManager = null;

        for (Manager manager : managers) {
            double totalSalary = manager.getTotalSalary();
            if (totalSalary > maxTotalSalary) {
                maxTotalSalary = totalSalary;
                maxTotalSalaryManager = manager;
            }
        }

        if (maxTotalSalaryManager != null) {
            System.out.println("\nDetails of Manager with Maximum Total Salary:");
            maxTotalSalaryManager.display();
        } else {
            System.out.println("No managers entered.");
        }

        scanner.close();
    }
}